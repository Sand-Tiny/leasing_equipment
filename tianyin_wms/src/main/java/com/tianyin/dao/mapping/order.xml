<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="order">

    <resultMap type="com.tianyin.domain.Order" id="order">
        <result column="order_id"           property="orderId"/>
        <result column="appoint_date"       property="appointDate"/>
        <result column="consumer_name"      property="consumerName"/>
        <result column="appoint_address"    property="appointAddress"/>
        <result column="consumer_phone"     property="consumerPhone"/>
        <result column="status"             property="status"/>
        <result column="create_time"        property="createTime"/>
    </resultMap>
    
    <insert id="add" useGeneratedKeys="true" keyProperty="orderId">
        insert into `order` 
        (`appoint_date`, `consumer_name`, `appoint_address`, `consumer_phone`, `status`, `create_time`)
        values
        (#{appointDate}, #{consumerName}, #{appointAddress}, #{consumerPhone}, #{status}, #{createTime})
    </insert>
    
    <update id="update">
        update `order`
        <set>
        `appoint_date`      = #{appointDate}, 
        `consumer_name`     = #{consumerName}, 
        `appoint_address`   = #{appointAddress}, 
        `consumer_phone`    = #{consumerPhone}, 
        `status`            = #{status}, 
        `create_time`       = #{createTime}
        </set>
        <where>
        `order_id` = #{orderId}
        </where>
    </update>
    
    <update id="updateStatus">
        update `order` set `status` = #{status} where `order_id` = #{orderId}
    </update>
    
    <sql id="queryCondition">
	<where>
		<if test="startDate != null">
			and a.`appoint_date` &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			and a.`appoint_date` &lt;= #{endDate}
		</if>
		<if test="consumerName != null">
			and instr(a.`consumer_name`, #{consumerName}) > 0
		</if>
		<if test="status != null">
			and a.`status` = #{status}
		</if>
		<if test="status == null">
		    and a.`status` &lt; 4
		</if>
	</where>
    </sql>
    
    <select id="getCount" resultType="int">
        select COUNT(a.`order_id`) 
        from `order` a
        <include refid="queryCondition"></include>
    </select>
    
    <select id="query" resultMap="order">
        select 
            a.`order_id`, 
	        a.`appoint_date`, 
	        a.`consumer_name`, 
	        a.`appoint_address`, 
	        a.`consumer_phone`, 
	        a.`status`, 
	        a.`create_time`
        from `order` a
        <include refid="queryCondition"></include>
        order by a.`appoint_date` asc
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

   <resultMap type="com.tianyin.domain.Summarize" id="summarize">
        <result property="totalCount"       column="total_count"/>
        <result property="paidCount"        column="paid_count"/>
        <result property="notpaidCount"     column="notpaid_count"/>
        <result property="totalMoney"       column="total_money"/>
        <result property="paidMoney"        column="paid_money"/>
        <result property="notpaidMoney"     column="notpaid_money"/>
    </resultMap>
    
    <select id="getCountDetail" resultMap="summarize">
        select COUNT(a.`order_id`) as total_count, 
        COUNT(IF(a.`status` = 1, `order_id`, null)) notpaid_count,
        COUNT(IF(a.`status` = 2, `order_id`, null)) paid_count 
        from `order` a
        <include refid="queryCondition"></include>
    </select>

    <select id="getMoneyDetail" resultMap="summarize">
        select SUM(b.price * b.quantity) as total_money, 
		SUM(IF(a.`status` = 1, b.price * b.quantity, null)) as notpaid_money,
		SUM(IF(a.`status` = 2, b.price * b.quantity, null)) as paid_money
		from `order` a 
		INNER JOIN order_item b on a.order_id = b.order_id 
        <include refid="queryCondition"></include>
    </select>
</mapper>